/*
 * File: app/controller/mainController.js
 *
 * This file was generated by Sencha Architect version 2.2.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('fb_display.controller.mainController', {
    extend: 'Ext.app.Controller',

    config: {
        views: [
            'mainNavView',
            'MyTabPanel'
        ],

        refs: {
            MainPanel: '#mainPanel',
            TabPanel: '#tabPanel',
            LoginPanel: '#loginPanel',
            HomeBtn: {
                selector: '#homeBtn',
                xtype: 'button'
            }
        },

        control: {
            "#mainNavView": {
                activate: 'onMainNavViewActivate'
            }
        }
    },

    onMainNavViewActivate: function(container, newActiveItem, oldActiveItem, eOpts) {
        // Additional JS functions here
        window.fbAsyncInit = function() {
            FB.init({
                appId      : '157710384393835', // App ID
                channelUrl : 'channel.html', // Channel File
                status     : true, // check login status
                cookie     : true, // enable cookies to allow the server to access the session
                oauth      : true, // enable OAuth 2.0
                xfbml      : true  // parse XFBML
            });

            // Additional init code here
            FB.getLoginStatus(function(response) {
                if (response.status === 'connected') {
                    // connected
                    testAPI();
                    alert('logged in (getLoginStatus)');
                    //var goHomeBtn = Ext.getCmp("homeBtn");
                    //goHomeBtn.show();
                } else if (response.status === 'not_authorized') {
                    // not_authorized
                    login();
                } else {
                    // not_logged_in
                    login();
                }
            })	;
        };


        function login() {
            FB.login(function(response) {
                if (response.authResponse) {
                    // connected
                } else {
                    // cancelled
                }
            });
        }

        function testAPI() {
            console.log('Welcome!  Fetching your information.... ');
            FB.api('/me', function(response) {
                console.log('Good to see you, ' + response.name + '.');
            });
        }


        // Load the SDK Asynchronously
        // Load the SDK's source Asynchronously
        // Note that the debug version is being actively developed and might 
        // contain some type checks that are overly strict. 
        // Please report such bugs using the bugs tool.
        /*(function(d, s, id, debug){
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) {return;}
        js = d.createElement(s); js.id = id;
        js.src = "http://connect.facebook.net/en_US/all" + (debug ? "/debug" : "") + ".js";
        fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk', debug false));*/
        (function(d){
            var js, id = 'facebook-jssdk'; if (d.getElementById(id)) {return;}
            js = d.createElement('script'); js.id = id; js.async = true;
            js.src = "all.js";
            d.getElementsByTagName('head')[0].appendChild(js);
        }(document));
    }

});